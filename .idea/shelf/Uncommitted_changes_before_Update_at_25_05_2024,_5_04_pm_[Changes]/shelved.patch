Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.example</groupId>\n    <artifactId>teamcity-testing-framework</artifactId>\n    <version>1.0-SNAPSHOT</version>\n    <name>teamcity-testing-framework</name>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <maven.compiler.target>17</maven.compiler.target>\n        <maven.compiler.source>17</maven.compiler.source>\n        <aspectj.version>1.9.19</aspectj.version>\n        <allure.version>2.24.0</allure.version>\n        <rest-assured.version>5.1.1</rest-assured.version>\n        <lombok.version>1.18.32</lombok.version>\n        <jackson-annotations.version>2.15.2</jackson-annotations.version>\n        <google-gson.version>2.10.1</google-gson.version>\n        <assertj-core.version>3.22.0</assertj-core.version>\n        <selenide.version>7.0.2</selenide.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>io.qameta.allure</groupId>\n            <artifactId>allure-testng</artifactId>\n            <version>${allure.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.codeborne</groupId>\n            <artifactId>selenide-testng</artifactId>\n            <version>6.19.1</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.qameta.allure</groupId>\n            <artifactId>allure-selenide</artifactId>\n            <version>${allure.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.testng</groupId>\n            <artifactId>testng</artifactId>\n            <version>7.7.1</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-simple</artifactId>\n            <version>2.0.7</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.rest-assured</groupId>\n            <artifactId>rest-assured</artifactId>\n            <version>${rest-assured.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <version>${lombok.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-annotations</artifactId>\n            <version>${jackson-annotations.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.google.code.gson</groupId>\n            <artifactId>gson</artifactId>\n            <version>${google-gson.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.assertj</groupId>\n            <artifactId>assertj-core</artifactId>\n            <version>${assertj-core.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.codeborne</groupId>\n            <artifactId>selenide</artifactId>\n            <version>${selenide.version}</version>\n        </dependency>\n    </dependencies>\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>2.22.2</version>\n                <configuration>\n                    <testFailureIgnore>true</testFailureIgnore>\n                    <argLine>\n                        -javaagent:\"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar\"\n                    </argLine>\n                    <systemProperties>\n                        <property>\n                            <name>allure.results.directory</name>\n                            <value>${project.build.directory}/allure-results</value>\n                        </property>\n                    </systemProperties>\n                </configuration>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.aspectj</groupId>\n                        <artifactId>aspectjweaver</artifactId>\n                        <version>${aspectj.version}</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n            <plugin>\n                <groupId>io.qameta.allure</groupId>\n                <artifactId>allure-maven</artifactId>\n                <version>2.12.0</version>\n            </plugin>\n        </plugins>\n    </build>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision d0e698d949f511dc81415f1c1673c4099b851905)
+++ b/pom.xml	(date 1716578583218)
@@ -102,6 +102,10 @@
                             <value>${project.build.directory}/allure-results</value>
                         </property>
                     </systemProperties>
+                    <suiteXmlFiles>
+                        <suiteXmlFile>testng-suites/api-suite.xml</suiteXmlFile>
+                        <suiteXmlFile>testng-suites/ui-suite.xml</suiteXmlFile>
+                    </suiteXmlFiles>
                 </configuration>
                 <dependencies>
                     <dependency>
Index: testng-suites/ui-suite.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/testng-suites/ui-suite.xml b/testng-suites/ui-suite.xml
new file mode 100644
--- /dev/null	(date 1716578357575)
+++ b/testng-suites/ui-suite.xml	(date 1716578357575)
@@ -0,0 +1,8 @@
+<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
+<suite name="UI Suite">
+    <test name="UI Test">
+        <classes>
+            <class name="ui.BuildConfigurationTest"/>
+        </classes>
+    </test>
+</suite>
\ No newline at end of file
Index: testng-suites/api-suite.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/testng-suites/api-suite.xml b/testng-suites/api-suite.xml
new file mode 100644
--- /dev/null	(date 1716578357583)
+++ b/testng-suites/api-suite.xml	(date 1716578357583)
@@ -0,0 +1,8 @@
+<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
+<suite name="API Suite">
+    <test name="API Test">
+        <classes>
+            <class name="api.BuildConfigurationPositiveTest"/>
+        </classes>
+    </test>
+</suite>
\ No newline at end of file
Index: .github/workflows/test.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.github/workflows/test.yml b/.github/workflows/test.yml
new file mode 100644
--- /dev/null	(date 1716645720367)
+++ b/.github/workflows/test.yml	(date 1716645720367)
@@ -0,0 +1,77 @@
+name: TeamCity Tests
+
+on: push
+
+jobs:
+  run_teamcity_tests:
+    runs-on: ubuntu-latest
+    steps:
+      - uses: actions/checkout@v4
+      - name: Setup JDK 17
+        uses: actions/setup-java@v4
+        with:
+          java-version: '17'
+          distribution: 'zulu'
+
+      - name: Install ifconfig
+        run: sudo apt-get update && sudo apt-get install -y net-tools
+
+      - name: Setup host environment variables
+        run: |
+          echo "HOST=$(ifconfig | grep -E "([0-9]{1,3}\.){3}[0-9]{1,3}" | grep -v 127.0.0.1 | awk '{ print $2 }' | cut -f2 -d: | head -n1)" >> $GITHUB_ENV
+
+      - name: Setup host config.properties
+        run: echo "host=$HOST:8111" >> src/main/resources/config.properties
+
+      - name: Pull Selenoid Chrome/Firefox/..
+        run: docker pull selenoid/vnc_chrome:119.0
+
+      - name: Run Selenoid
+        run: |
+          docker run -d \
+            --name selenoid \
+            -p 4444:4444 \
+            -v /var/run/docker.sock:/var/run/docker.sock \
+            -v $(pwd)/config/:/etc/selenoid/:ro \
+            aerokube/selenoid
+
+      - name: Run Selenoid UI
+        run: |
+          docker run -d --name selenoid-ui \
+          -p 8080:8080 \
+          aerokube/selenoid-ui \
+          --selenoid-uri http://$HOST:4444
+
+      - name: Run TeamCity Server
+        run: |
+          docker run -u 0 -d --name teamcity-server \
+          -v $(pwd)/tmp/teamcity_server/datadir:/data/teamcity_server/datadir \
+          -v $(pwd)/tmp/teamcity_server/logs:/opt/teamcity/logs \
+          -p 8111:8111 \
+          jetbrains/teamcity-server:latest
+
+      - name: Setup TeamCity Server
+        run: ./mvnw clean test -Dtest=SetupFirstStartTest#setupTeamCityServerTest
+
+      - name: Set up superUserToken environment variable
+        run: echo "SUPER_USER_TOKEN=$(docker logs teamcity-server | grep 'Super user authentication token' | tail -n 1 | awk '{print $6}')" >> $GITHUB_ENV
+
+      - name: Set up superUserToken config property
+        run: echo "superUserToken=$SUPER_USER_TOKEN" >> src/main/resources/config.properties
+
+      - name: Run TeamCity agent
+        run: |
+          docker run -e SERVER_URL=http://$HOST:8111 -u 0 -d --name teamcity-agent \
+          -v $(pwd)/tmp/teamcity_agent/conf:/data/teamcity_agent/conf \
+          jetbrains/teamcity-agent:latest
+
+      - name: Set up TeamCity agent
+        run: ./mvnw test -Dtest=SetupFirstStartTest#setupTeamCityAgentTest
+
+      - name: Run tests
+        run: ./mvnw test -Dgroups=Regression
+
+
+          
+
+
Index: infra/setup_infra.sh
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infra/setup_infra.sh b/infra/setup_infra.sh
new file mode 100644
--- /dev/null	(date 1716578410656)
+++ b/infra/setup_infra.sh	(date 1716578410656)
@@ -0,0 +1,99 @@
+cd ..
+
+teamcity_tests_directory=${pwd}
+workdir="teamcity_tests_infrastructure"
+teamcity_server_workdir="teamcity_server"
+teamcity_agent_workdir="teamcity_agent"
+selenoid_workdir="selenoid"
+teamcity_server_container_name="teamcity_server_instance"
+teamcity_agent_container_name="teamcity_agent_instance"
+selenoid_container_name="selenoid_instance"
+selenoid_ui_container_name="selenoid_ui_instance"
+
+workdir_names=($teamcity_server_workdir $teamcity_agent_workdir $selenoid_workdir)
+container_names=($teamcity_server_container_name $teamcity_agent_container_name $selenoid_container_name @selenoid_ui_container_name)
+
+######################################
+echo "Request ip"
+export ips=$(ifconfig | grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*' | grep -Eo '([0-9]*\.){3}[0-9]*' | grep -v '127.0.0.1')
+export ip=${ips%%$'\n'*}
+
+######################################
+echo "Current IP: $ip"
+
+######################################
+echo "Delete previous run data"
+rm -rf $workdir
+mkdir $workdir
+cd $workdir
+
+for dir in "${workdir_names[@]}"; do
+  mkdir $dir
+done
+
+for container in "${container_names[@]}"; do
+  docker stop $container
+  docker rm $container
+done
+
+######################################
+echo "Start teamcity server"
+cd $teamcity_server_workdir
+
+docker run -d --name $teamcity_server_container_name  \
+    -v $(pwd)/logs:/opt/teamcity/logs  \
+    -p 8111:8111 \
+    jetbrains/teamcity-server
+
+echo "Teamcity server is running..."
+
+######################################
+echo "Start selenoid"
+
+cd .. && cd $selenoid_workdir
+mkdir config
+cp $teamcity_tests_directory/infra/browsers.json config/
+
+docker run -d                                   \
+            --name $selenoid_container_name                                 \
+            -p 4444:4444                                    \
+            -v /var/run/docker.sock:/var/run/docker.sock    \
+            -v $(pwd)/config/:/etc/selenoid/:ro              \
+    aerokube/selenoid:latest-release
+
+image_names=($(awk -F'"' '/"image": "/{print $4}' "$(pwd)/config/browsers.json"))
+
+echo "Pull all browser images: $image_names"
+
+for image in "${image_names[@]}"; do
+  docker pull $image
+done
+
+######################################
+echo "Start selenoid-ui"
+
+docker run -d--name $selenoid_ui_container_name                                 \
+            -p 80:8080 aerokube/selenoid-ui:latest-release --selenoid-uri "http://$ip:4444"
+
+######################################
+echo "Setup teamcity server"
+mvn clean test -Dtest=SetupTest#startUpTest
+
+######################################
+echo "Parse superuser token"
+superuser_token=$(grep -o 'Super user authentication token: [0-9]*' $teamcity_tests_directory/infra/$workdir/$teamcity_server_workdir/logs/teamcity-server.log | awk '{print $NF}')
+echo "Super user token: $superuser_token"
+
+######################################
+echo "Run system tests"
+cd .. & cd .. & cd ..
+
+echo "host=$ip:8111\nsuperUserToken=$superuser_token\nremote=true" > $teamcity_tests_directory/src/main/resources/config.properties
+cat $teamcity_tests_directory/src/main/resources/config.properties
+
+echo "Run API tests"
+mvn test -DsuiteXmlFile=testng-suites/api-suite.xml
+
+echo "Run UI tests"
+mvn test -DsuiteXmlFile=testng-suites/ui-suite.xml
+
Index: infra/browsers.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/infra/browsers.json b/infra/browsers.json
new file mode 100644
--- /dev/null	(date 1716576277486)
+++ b/infra/browsers.json	(date 1716576277486)
@@ -0,0 +1,32 @@
+{
+  "firefox": {
+    "default": "89.0",
+    "versions": {
+      "89.0": {
+        "image": "selenoid/vnc:firefox_89.0",
+        "port": "4444",
+        "path": "/wd/hub"
+      }
+    }
+  },
+  "chrome": {
+    "default": "91.0",
+    "versions": {
+      "91.0": {
+        "image": "selenoid/vnc:chrome_91.0",
+        "port": "4444",
+        "path": "/"
+      }
+    }
+  },
+  "opera": {
+    "default": "76.0",
+    "versions": {
+      "76.0": {
+        "image": "selenoid/vnc:opera_76.0",
+        "port": "4444",
+        "path": "/wd/hub"
+      }
+    }
+  }
+}
\ No newline at end of file
